import React, { useState } from "react";
import example1 from "../../assets/imgs/carousel/example1.svg";
import example2 from "../../assets/imgs/carousel/example2.svg";
import example3 from "../../assets/imgs/carousel/example3.svg";
//import styled, { css } from "styled-components";

const imgs = [
  {
    num: example1,
    id: 1,
  },
  {
    num: example2,
    id: 2,
  },
  {
    num: example3,
    id: 3,
  },
];

export const CarouselCustom = () => {
  let [current, setCurrent] = useState(0);

  let previousSlide = () => {
    if (current === 0) setCurrent(imgs.length - 1);
    else setCurrent(current - 1);
  };

  let nextSlide = () => {
    if (current === imgs.length - 1) setCurrent(0);
    else setCurrent(current + 1);
  };

  return (
    <div className="overflow-hidden relative">
      <div
        className={`flex transition ease-out duration-40`}
        style={{
          transform: `translateX(-${current * 100}%)`,
        }}
      >
        {imgs.map((s) => {
          return (
            <img
              className="border-2 border-solid border-red-700 px-96 py-20"
              src={s.num}
            />
          );
        })}
      </div>

      <div className="absolute top-0 h-full w-full justify-between items-center flex text-black px-10 text-3xl border-2 border-solid border-black">
        <button
          className="border-2 border-solid border-red-700"
          onClick={previousSlide}
        >
          {/* <BsFillArrowLeftCircleFill /> */}왼쪽
        </button>
        <button
          className="border-2 border-solid border-red-700"
          onClick={nextSlide}
        >
          {/* <BsFillArrowRightCircleFill /> */}오른쪽
        </button>
      </div>

      <div className="absolute bottom-0 py-4 flex justify-center gap-3 w-full border-2 border-solid border-red-700">
        {imgs.map((s, i) => {
          return (
            <div
              onClick={() => {
                setCurrent(i);
              }}
              key={"circle" + i}
              className={` rounded-full w-5 h-5 cursor-pointer  ${
                i == current ? "bg-orange-400" : "bg-gray-500"
              }`}
            ></div>
          );
        })}
      </div>
    </div>
  );
};
